<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
                        http://www.springframework.org/schema/beans/spring-beans-4.1.xsd  
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context-4.1.xsd  
                        http://www.springframework.org/schema/mvc  
                        http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
 						http://www.springframework.org/schema/aop 
 						http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
 						 http://code.alibabatech.com/schema/dubbo  
     					  http://code.alibabatech.com/schema/dubbo/dubbo.xsd
                        ">
    <import resource="dubbo-config.xml" /> 
  	<import resource="dubbo-config_service.xml" /> 
    <import resource="dubbo-config_reference.xml" />                     
      <!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 	<context:component-scan base-package="com.cn.hnust.controller" />-->
		
	<!-- 启动对@Aspectj的支持 true为cglib，false为jdk代理，为true的话，会导致拦截不了mybatis的mapper
    <aop:aspectj-autoproxy proxy-target-class="true" />-->
      <!-- 开启注解配置<context:component-scan base-package="com.module.enterprisesmanager" /> -->  
    <context:annotation-config />  
  	<!-- 自动扫描 -->
	<context:component-scan base-package="com" />
    

    
	<!-- velocity环境配置 -->
 	<bean id="velocityConfig"
		class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
		<!-- velocity配置文件路径 -->
		<property name="configLocation" value="classpath:properties/velocity.properties" />
		<!-- velocity模板路径 -->
		<property name="resourceLoaderPath" value="/WEB-INF/views/" />
	</bean>

	<!-- FreeMarker <bean id="viewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver"> 
		<property name="viewClass" value="org.springframework.web.servlet.view.freemarker.FreeMarkerView" 
		/> <property name="contentType" value="text/html; charset=utf-8"/> </bean> -->
	<bean id="freeMarkerConfig"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<!-- 模板根目录 -->
		<property name="templateLoaderPaths" value="/WEB-INF/ftl" />
 		<!-- 编码格式 -->
		<property name="freemarkerSettings">
			<props>
				<prop key="template_update_delay">0</prop>
				<prop key="default_encoding">UTF-8</prop>
				<prop key="locale">zh_CN</prop>
				<prop key="url_escaping_charset">UTF-8</prop>
				<prop key="whitespace_stripping">true</prop>
				<prop key="number_format">#</prop>
				<!-- 配置自定义的freemarker异常处理 
				<prop key="template_exception_handler">com.common.freemarker.FreemarkerExceptionHandler
				</prop>-->
			</props>
		</property>
	</bean>

	<!-- 支持多视图 -->
	<bean id="viewResolver" class="com.common.MultiViewResover">
		<property name="resolvers">
			<map>
				<entry key="jsp">
					<bean
						class="org.springframework.web.servlet.view.InternalResourceViewResolver">
						<property name="viewClass"
							value="org.springframework.web.servlet.view.JstlView" />
						<property name="prefix" value="/WEB-INF/jsp/" />
						<property name="suffix" value=".jsp" />
					</bean>
				</entry>
				<entry key="ftl">
					<bean
						class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
						<property name="cache" value="true" />
						<property name="prefix" value="/" />
						<property name="suffix" value=".ftl" />
						<property name="viewClass"
							value="org.springframework.web.servlet.view.freemarker.FreeMarkerView" />
						<property name="contentType" value="text/html; charset=utf-8" />

  						<property name="exposeRequestAttributes" value="true" />
						<property name="exposeSessionAttributes" value="true" />
						<property name="exposeSpringMacroHelpers" value="true" />
						<!-- 把contextPath暴露给freemaker，前端可以通过${base.getContextPath()} 来获取上下文路径 -->
						<property name="requestContextAttribute" value="base" />
						<property name="allowSessionOverride" value="true" />
					</bean>

				</entry>
				<entry key="vm">
					<bean
						class="org.springframework.web.servlet.view.velocity.VelocityLayoutViewResolver">
						<property name="cache" value="true" />
						<property name="prefix" value="/" />
						<property name="suffix" value=".html" />
						<!-- <property name="suffix" value=".vm" />视图文件的前缀，即存放的路径 -->
						<!-- <property name="cache" value="false" />视图文件的后缀名 -->
						<property name="contentType" value="text/html;charset=utf-8" />
						<property name="dateToolAttribute" value="date" /> <!--日期函数名称 -->
						<property name="numberToolAttribute" value="number" /><!-- 
							数字函数名称 -->
						<property name="layoutUrl" value="layout/default.html" /><!--指定layout文件 -->
						<!-- <property name="layoutUrl" value="/WEB-INF/views/layout/default.vm" 
							/>指定layout文件 -->
						<property name="toolboxConfigLocation" value="/WEB-INF/views/toolbox.xml" /><!--toolbox配置文件路径 -->
						<property name="exposeSpringMacroHelpers" value="true" /><!--是否使用spring对宏定义的支持 -->
						<property name="exposeRequestAttributes" value="true" /><!-- 
							是否开放request属性 -->
						<property name="requestContextAttribute" value="rc" /><!--request属性引用名称 -->
					</bean>
				</entry>
			</map>
		</property>
	</bean>
 <!--避免IE执行AJAX时，返回JSON出现下载文件 -->
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<!-- <value>application/json;charset=UTF-8</value> -->
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>
 
	<!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" />
				<bean
					class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />
				<bean
					class="org.springframework.http.converter.StringHttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<value>application/json;charset=UTF-8</value>
						</list>
					</property>
				</bean>
				<bean class="org.springframework.http.converter.FormHttpMessageConverter" />
				<bean
					class="org.springframework.http.converter.xml.SourceHttpMessageConverter" />
					
			 <bean  class="org.springframework.http.converter.ResourceHttpMessageConverter"></bean>
            <bean   class="org.springframework.http.converter.ByteArrayHttpMessageConverter"></bean>
                 <bean
                    class="org.springframework.http.converter.xml.XmlAwareFormHttpMessageConverter"></bean>
                <bean
                    class="org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter"></bean>
                <bean
                    class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"></bean>
				<!-- JSON转换器 -->
			</list>
		</property>
	</bean>
	                    

 
 </beans>
 